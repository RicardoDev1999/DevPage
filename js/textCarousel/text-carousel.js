// Generated by CoffeeScript 2.3.2
(function() {
  window.TextCarousel = class TextCarousel {
    constructor(textCarouselDiv, interval, pause) {
      this.textCarouselDiv = textCarouselDiv;
      this.interval = interval;
      this.pause = pause;
      this.wordIndex = 0;
      this.words = [];
      this.word = "";
      this.mode = 0; // 0 = write, 1 = erase
    }

    start() {
      var intervalErasingText, intervalWriteText, text, textCarouselWords, thisTextCarousel;
      thisTextCarousel = this;
      textCarouselWords = $(this.textCarouselDiv).find(".text-carousel-word").toArray();
      $.each(textCarouselWords, function(i, e) {
        var word;
        word = $(e).data("word");
        thisTextCarousel.words.push(word);
      });
      if (thisTextCarousel.wordIndex >= thisTextCarousel.words.length) {
        thisTextCarousel.wordIndex = 0;
      }
      text = thisTextCarousel.words[thisTextCarousel.wordIndex];
      thisTextCarousel.textCarouselDiv.html(thisTextCarousel.word);
      if (thisTextCarousel.mode === 0) {
        intervalWriteText = setInterval(function() {
          debugger;
          var lastChar;
          if (thisTextCarousel.word.length < text.length) {
            thisTextCarousel.word = text.substring(0, thisTextCarousel.word.length + 1);
            lastChar = thisTextCarousel.word[thisTextCarousel.word.length - 1];
            if (lastChar !== "<") {
              return thisTextCarousel.textCarouselDiv.html(thisTextCarousel.word);
            }
          } else {
            clearInterval(intervalWriteText);
            thisTextCarousel.mode = 1;
            return setTimeout(function() {
              thisTextCarousel.start();
              return thisTextCarousel.pause;
            });
          }
        }, thisTextCarousel.interval);
      }
      if (thisTextCarousel.mode === 1) {
        return intervalErasingText = setInterval(function() {
          var lastChar;
          if (thisTextCarousel.word.length > 0) {
            thisTextCarousel.word = text.substring(0, thisTextCarousel.word.length - 1);
            lastChar = thisTextCarousel.word[thisTextCarousel.word.length - 1];
            if (lastChar !== "<") {
              return thisTextCarousel.textCarouselDiv.html(thisTextCarousel.word);
            }
          } else {
            clearInterval(intervalErasingText);
            thisTextCarousel.wordIndex += 1;
            thisTextCarousel.textCarouselDiv.html("");
            thisTextCarousel.mode = 0;
            return thisTextCarousel.start();
          }
        }, thisTextCarousel.interval);
      }
    }

  };

}).call(this);

//# sourceMappingURL=text-carousel.js.map
